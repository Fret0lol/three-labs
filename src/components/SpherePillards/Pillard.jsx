/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useEffect, useRef } from "react";
import { MeshMatcapMaterial, Vector3 } from "three";

export function Pillard(props) {
  const pillard = useRef()
  const upVector = new Vector3(0, 1, 0)
  // Model
  const { nodes, materials } = useGLTF("/pillard.glb");

  // Textures
  const greyMetalTexture =  useTexture("./greyMetal.png")
  const blackMetalTexture = useTexture("./blackMetal.png")

  const greyMetalMaterial = new MeshMatcapMaterial({matcap: greyMetalTexture})
  const blackMetalMaterial = new MeshMatcapMaterial({matcap: blackMetalTexture})

  useEffect(() => {
    // console.log(pillard.current.children[0].children[0]);
    pillard.current.quaternion.setFromUnitVectors(upVector, props.position.normalize())
  }, [])

  useFrame((state) => {
    const time = state.clock.getElapsedTime()
    pillard.current.children[0].children[0].position.y = (Math.sin(time * 2 + pillard.current.position.x) + 0.8)
    // console.log(pillard);
  })

  return (
    <group {...props} ref={pillard}>
      <mesh
        geometry={nodes.base.geometry}
        material={greyMetalMaterial}
      >
        <mesh
          geometry={nodes.Cylinder.geometry}
          material={blackMetalMaterial}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/pillard.glb");